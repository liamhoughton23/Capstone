@model IEnumerable<CAPSTONE.Models.LocationGetter>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Destination)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Location)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Destination)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.DestinationID }) |
            @Html.ActionLink("Details", "Details", new { id=item.DestinationID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.DestinationID })
        </td>
    </tr>
}



</table>
<div id="map"></div>
<script>
    function initMap() {
        var user = @Html.Raw(Json.Encode(Model));
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 4,
            center: new google.maps.LatLng(10,-87.3),
            mapTypeId: 'terrain'
        });
        for (i = 0; i < user.length; i++) {
                var myLatLng = new google.maps.LatLng(user[i]['Latitude'], user[i]['Longitude'])

                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map
                });
                map.center = myLatLng;
        }
    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC4ALH2fGv4h1UC3bN0y8QgmOJCEhop7K8&callback=initMap">
</script>


